# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\code\getComics_py\View\Mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(7)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setStyleSheet("/* 整个 QTabWidget 面板区域 */\n"
"QTabWidget::pane {\n"
"    border: 1px solid #e0e0e0;\n"
"    border-radius: 8px;\n"
"    background-color: #ffffff;\n"
"}\n"
"\n"
"/* TabBar 样式 */\n"
"QTabBar::tab {\n"
"    background: #f9f9f9;\n"
"    color: #555555;\n"
"    padding: 8px 18px;\n"
"    border-top-left-radius: 6px;\n"
"    border-top-right-radius: 6px;\n"
"    min-width: 80px;\n"
"    font-size: 14px;\n"
"    transition: all 0.3s ease;\n"
"}\n"
"\n"
"/* 悬浮效果 */\n"
"QTabBar::tab:hover {\n"
"    background-color: #e8f6f9;\n"
"    color: #3a8fb7;\n"
"}\n"
"\n"
"/* 当前选中标签 */\n"
"QTabBar::tab:selected {\n"
"    background-color: #ffffff;\n"
"    color: #30b9a4;\n"
"    font-weight: 600;\n"
"    border-top: 2px solid #30b9a4;\n"
"}\n"
"\n"
"/* 非选中标签向下偏移形成层次 */\n"
"QTabBar::tab:!selected {\n"
"    margin-top: 2px;\n"
"}\n"
"\n"
"/* 可关闭按钮样式（如有） */\n"
"QTabBar::close-button {\n"
"    image: url(:/icons/close.svg); /* 可换成你的轻量图标 */\n"
"    subcontrol-position: right;\n"
"    margin-left: 6px;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"}\n"
"\n"
"/* 关闭按钮 hover 效果 */\n"
"QTabBar::close-button:hover {\n"
"    background-color: #ff7e7e;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"/* Tab 内容区域 */\n"
"QWidget#tabContent {\n"
"    background-color: #ffffff;\n"
"    border-top: none;\n"
"    padding: 12px;\n"
"}\n"
"")
        self.tabWidget.setObjectName("tabWidget")
        self.home = Home()
        self.home.setObjectName("home")
        self.tabWidget.addTab(self.home, "")
        self.download = Download()
        self.download.setObjectName("download")
        self.tabWidget.addTab(self.download, "")
        self.setting = QtWidgets.QWidget()
        self.setting.setObjectName("setting")
        self.tabWidget.addTab(self.setting, "")
        self.verticalLayout_2.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.home), _translate("MainWindow", "首页"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.download), _translate("MainWindow", "下载"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.setting), _translate("MainWindow", "设置"))
from Controller.Download import Download
from Controller.Home import Home
